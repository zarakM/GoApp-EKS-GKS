version: 2.1
orbs:
  gcp-gke: circleci/gcp-gke@1.1.0
  gke: circleci/gcp-gke@1.1.0
  helm: circleci/helm@1.1.2
  kubernetes: circleci/kubernetes@0.11.2

jobs:
  containerization:
    machine: true
    steps:
      - checkout
      - run: |
          echo "$dockerhub_pass" | docker login --username zarakmughal --password-stdin

      - run: docker build -t zarakmughal/goapp-cicd:main .

      - run: docker push zarakmughal/goapp-cicd:main

  update-kubeconfig:
    machine: true
    steps:
      - gcloud/install
      - k8s/install-kubectl
    # description: >
    #   Allows the kubectl client to work with a GKE cluster. Updates the kubectl
    #   configuration file with GKE cluster access credentials.
    # parameters:
    #   cluster:
    #     description: |
    #       The name of the cluster for which to create a kubeconfig entry.
    #     type: string
    #   gcloud-service-key:
    #     default: GCLOUD_SERVICE_KEY
    #     description: The gcloud service key
    #     type: env_var_name
    #   google-compute-zone:
    #     default: GOOGLE_COMPUTE_ZONE
    #     description: The Google compute zone to connect with via the gcloud CLI
    #     type: env_var_name
    #   google-project-id:
    #     default: GOOGLE_PROJECT_ID
    #     description: The Google project ID to connect with via the gcloud CLI
    #     type: env_var_name
    #   install-kubectl:
    #     default: false
    #     description: |
    #       Whether to install kubectl
    #     type: boolean
    #   perform-login:
    #     default: false
    #     description: |
    #       Whether to perform a login with the gcloud CLI.
    #     type: boolean
    # steps:
    #   - when:
    #       condition: <<parameters.perform-login>>
    #       steps:
    #         - gcloud/initialize:
    #             gcloud-service-key: <<parameters.gcloud-service-key>>
    #             google-compute-zone: <<parameters.google-compute-zone>>
    #             google-project-id: <<parameters.google-project-id>>
    #   - when:
    #       condition: <<parameters.install-kubectl>>
    #       steps:
    #         - kubernetes/install-kubectl
    #   - run:
    #       command: |
    #         gcloud container clusters get-credentials <<parameters.cluster>>
    #       name: Update kubeconfig with cluster credentials

  deploy:
    machine: true
    steps:
      - run: |
          echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
          gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
          gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
      - gke/create-cluster:
          additional-args: "--cluster-version=1.16 --enable-ip-alias --num-nodes=1"
          cluster: goapp
          install-kubectl: true
      - gke/create-node-pool:
          additional-args: >-
            --image-type=cos --machine-type=e2-small --num-nodes=1
          cluster: goapp
          node-pool: goapp-node
  check:
    machine: true
    steps:
      - run: kubectl
  # helm:
  #   machine: true
  #   steps:
  #     - install-helm-on-cluster:
  #         cluster-name: goapp


workflows:
  test:
    jobs:
      # - containerization
      # - deploy
      - update-kubeconfig
      - check
      # # - helm